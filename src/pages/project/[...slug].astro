---
import Layout from "@/layouts/Layout.astro";
import { Image } from "astro:assets";
import { getCollection, getEntries } from "astro:content";
import DotPattern from "@/components/magicui/dot-pattern";
import { cn } from "@/lib/utils";
import RelatedCard from "@/components/project/related-card.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("project");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const year = entry.data.publishedDate.getFullYear();

const relatedProjects = entry.data.relatedProjects
  ? await getEntries(entry.data.relatedProjects)
  : [];
---

<Layout title={entry.data.name} description={entry.data.description}>
  <main class="relative mx-auto w-11/12 max-w-5xl py-20">
    <div class="mx-auto space-y-8">
      <div class="relative pb-20 pt-6 text-center">
        <DotPattern
          client:load
          className={cn(
            "-z-10 [mask-image:radial-gradient(300px_circle_at_center,white,transparent)]",
          )}
        />
        <h1 class="mb-2 scroll-m-20 font-extrabold tracking-tight">
          {entry.data.name}
        </h1>
        <p class="text-h5 text-zinc-600">{entry.data.description}</p>
      </div>
      <div class="grid grid-cols-1 gap-2 md:grid-cols-3">
        <div class="rounded-md bg-slate-100 p-4">
          <div class="font-syne text-paragraph font-bold text-slate-600">Type</div>
          <div class="text-h6 text-slate-900">
            {entry.data.type[0].toUpperCase() + entry.data.type.slice(1)}
          </div>
        </div>
        <div class="rounded-md bg-slate-100 p-4">
          <div class="font-syne text-paragraph font-bold text-slate-600">Role</div>
          <div class="text-h6 text-slate-900">Frontend</div>
        </div>
        <div class="rounded-md bg-slate-100 p-4">
          <div class="font-syne text-paragraph font-bold text-slate-600">Year</div>
          <div class="text-h6 text-slate-900">{year}</div>
        </div>
      </div>
      <div>
        <Image
          src={entry.data.cover}
          alt={entry.data.name ?? ""}
          width={100}
          height={100}
          class="w-full rounded-md"
        />
      </div>
      <div class="mx-auto w-10/12">
        <div class="mb-20">
          <h2 class="mb-4 text-2xl font-bold">Tools used</h2>
          <ul class="flex flex-wrap gap-4">
            {
              entry.data.tools.map((tool) => {
                return (
                  <li class="max-w-max rounded-full bg-slate-50 p-4 text-sm text-slate-700">
                    {tool}
                  </li>
                );
              })
            }
          </ul>
        </div>
        <div class="prose prose-lg prose-zinc mb-32">
          <Content />
        </div>
        {
          relatedProjects.length ? (
            <section class="">
              <h2 class="mb-8">More Projects</h2>
              <ul class="grid gap-12 md:grid-cols-2">
                {relatedProjects.map((project) => {
                  return (
                    <li>
                      <RelatedCard {...project.data} slug={project.slug} />
                    </li>
                  );
                })}
              </ul>
            </section>
          ) : null
        }
      </div>
    </div>
  </main>

  <style is:global>
    .prose a {
      text-decoration: none;
      background-image: linear-gradient(currentColor, currentColor);
      background-position: 0% 100%;
      background-repeat: no-repeat;
      background-size: 0% 2px;
      transition: background-size 0.3s;
    }

    .prose a:is(:hover, :focus) {
      background-size: 100% 2px;
    }

    .prose a {
      @apply break-words text-orange-600;
    }
    /* .prose a {
      @apply relative z-20 break-words no-underline before:absolute before:bottom-0 before:left-0 before:-z-10 before:h-full before:w-full before:origin-bottom before:scale-y-[10%] before:bg-orange-300/70 before:transition-transform hover:before:scale-100;
    } */

    .prose img {
      @apply m-0 rounded-md;
    }
    .prose .image-wrapper {
      @apply my-8 rounded-md p-2 ring-1 ring-zinc-300;
    }
  </style>
</Layout>
